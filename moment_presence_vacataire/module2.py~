from datetime import datetime
import pytz

def lire_fichier_ics(chemin_fichier):
    with open(chemin_fichier, 'r') as fichier:
        return fichier.read()

def traiter_donnees(data):
    evenements = []
    evenement_courant = None

    lignes = data.split('\n')
    for ligne in lignes:
        if ligne.startswith('BEGIN:VEVENT'):
            evenement_courant = {}
        elif ligne.startswith('SUMMARY:'):
            evenement_courant['summary'] = ligne.split(':')[-1]
        elif ligne.startswith('LOCATION:'):
            evenement_courant['location'] = ligne.split(':')[-1]
        elif ligne.startswith('DESCRIPTION:'):
            parties_description = ligne.split('\\n')
            groupe, enseignant = extraire_groupe_et_enseignant(parties_description)
            evenement_courant['group'] = groupe
            evenement_courant['teacher'] = enseignant 
        elif ligne.startswith('DTSTART:'):
            heure_debut = ligne.split(':')[-1]
            utc_heure_debut = datetime.strptime(heure_debut, '%Y%m%dT%H%M%SZ')
            paris_timezone = pytz.timezone('Europe/Paris')
            heure_locale_debut = utc_heure_debut.replace(tzinfo=pytz.utc).astimezone(paris_timezone)
            evenement_courant['start_time'] = heure_locale_debut.strftime('%H:%M')
            evenement_courant['date'] = heure_locale_debut.strftime('%d/%m/%Y')
        elif ligne.startswith('DTEND:'):
            heure_fin = ligne.split(':')[-1]
            utc_heure_fin = datetime.strptime(heure_fin, '%Y%m%dT%H%M%SZ')
            paris_timezone = pytz.timezone('Europe/Paris')
            heure_locale_fin = utc_heure_fin.replace(tzinfo=pytz.utc).astimezone(paris_timezone)
            evenement_courant['end_time'] = heure_locale_fin.strftime('%H:%M')
        elif ligne.startswith('END:VEVENT'):
            evenements.append(evenement_courant)

    return evenements

def extraire_groupe_et_enseignant(parties_description):
    groupe = "Inconnu"
    enseignant = "Inconnu"
    enseignants = [
        "CAMARDA FLORENT", "BONNETON ISABELLE", "JACQUET MICHELE", "REY LAURENT",
        "VERDON VINCENT", "COUDERC TURQ SEBASTIEN", "LAIZE ANNE SOPHIE", "LAUNAY FREDERIC",
        "VUATTOUX NESE", "COIRAULT PATRICK", "BOUCHEAU TONY", "TREMBLAIS BENOIT",
        "CHARTIER MAXIME", "FAVRY BRUNO", "HOUMEAU BERTRAND", "TRICHARD PASCALE",
        "DEROUICHE ABD EL KAOUI", "NAUDIN MATHIEU","SAVIN DYLAN","MIELON WILLIAMS"
    ]

    for partie in parties_description:
        if 'RT' in partie:
            groupe = partie.strip()
        elif any(enseignant in partie for enseignant in enseignants):
            enseignant = partie.strip()
    return groupe, enseignant

def generer_html(evenements):
    contenu_html = "<html><head><title>Emploi du Temps</title></head><body>"
    contenu_html += "<table border='1'>"
    contenu_html += "<tr><th>Date</th><th>Heure de début</th><th>Heure de fin</th><th>Résumé</th><th>Lieu</th><th>Groupe</th><th>Enseignant</th></tr>"
    
    for evenement in evenements:
        contenu_html += f"<tr><td>{evenement.get('date', 'N/A')}</td>"
        contenu_html += f"<td>{evenement.get('start_time', 'N/A')}</td>"
        contenu_html += f"<td>{evenement.get('end_time', 'N/A')}</td>"
        contenu_html += f"<td>{evenement.get('summary', 'N/A')}</td>"
        contenu_html += f"<td>{evenement.get('location', 'N/A')}</td>"
        contenu_html += f"<td>{evenement.get('group', 'N/A')}</td>"
        contenu_html += f"<td>{evenement.get('teacher', 'N/A')}</td></tr>"
    
    contenu_html += "</table></body></html>"
    return contenu_html

def ecrire_fichier_html(contenu, fichier_sortie):
    with open(fichier_sortie, "w") as fichier:
        fichier.write(contenu)
